{"name": "Verify POST for a Skill when user logged with UserName with Password -- @1.6 ", "status": "broken", "statusDetails": {"message": "requests.exceptions.InvalidJSONError: Out of range float values are not JSON compliant\n", "trace": "  File \"c:\\users\\dell\\pycharmprojects\\lms_api_hackathon2122_python\\venv\\lib\\site-packages\\behave\\model.py\", line 1329, in run\n    match.run(runner.context)\n  File \"c:\\users\\dell\\pycharmprojects\\lms_api_hackathon2122_python\\venv\\lib\\site-packages\\behave\\matchers.py\", line 98, in run\n    self.func(context, *args, **kwargs)\n  File \"FeaturesFile\\steps\\SkillsMaster.py\", line 78, in step_impl\n    context.response = requests.post(context.base_url + SKILLS_ENDPOINT, json=context.body,\n  File \"c:\\users\\dell\\pycharmprojects\\lms_api_hackathon2122_python\\venv\\lib\\site-packages\\requests\\api.py\", line 117, in post\n    return request('post', url, data=data, json=json, **kwargs)\n  File \"c:\\users\\dell\\pycharmprojects\\lms_api_hackathon2122_python\\venv\\lib\\site-packages\\requests\\api.py\", line 61, in request\n    return session.request(method=method, url=url, **kwargs)\n  File \"c:\\users\\dell\\pycharmprojects\\lms_api_hackathon2122_python\\venv\\lib\\site-packages\\requests\\sessions.py\", line 515, in request\n    prep = self.prepare_request(req)\n  File \"c:\\users\\dell\\pycharmprojects\\lms_api_hackathon2122_python\\venv\\lib\\site-packages\\requests\\sessions.py\", line 443, in prepare_request\n    p.prepare(\n  File \"c:\\users\\dell\\pycharmprojects\\lms_api_hackathon2122_python\\venv\\lib\\site-packages\\requests\\models.py\", line 321, in prepare\n    self.prepare_body(data, files, json)\n  File \"c:\\users\\dell\\pycharmprojects\\lms_api_hackathon2122_python\\venv\\lib\\site-packages\\requests\\models.py\", line 475, in prepare_body\n    raise InvalidJSONError(ve, request=self)\n"}, "steps": [{"name": "Given Skills User is on Endpoint: url/Skills with valid username and password", "status": "passed", "start": 1643268717968, "stop": 1643268717970}, {"name": "When skills User sends POST request body in skills from \"Skills_POST\" and 5 with valid JSON Schema", "status": "broken", "statusDetails": {"message": "requests.exceptions.InvalidJSONError: Out of range float values are not JSON compliant\n", "trace": "  File \"c:\\users\\dell\\pycharmprojects\\lms_api_hackathon2122_python\\venv\\lib\\site-packages\\behave\\model.py\", line 1329, in run\n    match.run(runner.context)\n  File \"c:\\users\\dell\\pycharmprojects\\lms_api_hackathon2122_python\\venv\\lib\\site-packages\\behave\\matchers.py\", line 98, in run\n    self.func(context, *args, **kwargs)\n  File \"FeaturesFile\\steps\\SkillsMaster.py\", line 78, in step_impl\n    context.response = requests.post(context.base_url + SKILLS_ENDPOINT, json=context.body,\n  File \"c:\\users\\dell\\pycharmprojects\\lms_api_hackathon2122_python\\venv\\lib\\site-packages\\requests\\api.py\", line 117, in post\n    return request('post', url, data=data, json=json, **kwargs)\n  File \"c:\\users\\dell\\pycharmprojects\\lms_api_hackathon2122_python\\venv\\lib\\site-packages\\requests\\api.py\", line 61, in request\n    return session.request(method=method, url=url, **kwargs)\n  File \"c:\\users\\dell\\pycharmprojects\\lms_api_hackathon2122_python\\venv\\lib\\site-packages\\requests\\sessions.py\", line 515, in request\n    prep = self.prepare_request(req)\n  File \"c:\\users\\dell\\pycharmprojects\\lms_api_hackathon2122_python\\venv\\lib\\site-packages\\requests\\sessions.py\", line 443, in prepare_request\n    p.prepare(\n  File \"c:\\users\\dell\\pycharmprojects\\lms_api_hackathon2122_python\\venv\\lib\\site-packages\\requests\\models.py\", line 321, in prepare\n    self.prepare_body(data, files, json)\n  File \"c:\\users\\dell\\pycharmprojects\\lms_api_hackathon2122_python\\venv\\lib\\site-packages\\requests\\models.py\", line 475, in prepare_body\n    raise InvalidJSONError(ve, request=self)\n"}, "start": 1643268717970, "stop": 1643268718074}, {"name": "Then skills User validates the StatusCode and the StatusMessage from \"Skills_POST\" sheet and 5 row", "status": "skipped", "start": 1643268718077, "stop": 1643268718077}, {"name": "And JSON schema is valid for POST/PUT METHOD in Skills", "status": "skipped", "start": 1643268718077, "stop": 1643268718077}, {"name": "And skills User should receive the skill in JSON body from \"Skills_POST\" and 5", "status": "skipped", "start": 1643268718077, "stop": 1643268718077}, {"name": "And skills check the Database with Skill id for POST/PUT from \"Skills_POST\" and 5", "status": "skipped", "start": 1643268718078, "stop": 1643268718078}], "parameters": [{"name": "SheetName", "value": "Skills_POST"}, {"name": "RowNumber", "value": "5"}], "start": 1643268717966, "stop": 1643268718078, "uuid": "53f61bec-ea1a-460a-9bdd-b59a715a26ab", "historyId": "8c5cdb86eaa2679a4ae913125104fc66", "fullName": "To check The POST method for Skills: Verify POST for a Skill when user logged with UserName with Password", "labels": [{"name": "severity", "value": "normal"}, {"name": "feature", "value": "To check The POST method for Skills"}, {"name": "framework", "value": "behave"}, {"name": "language", "value": "cpython3"}]}